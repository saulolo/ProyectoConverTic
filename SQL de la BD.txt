-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.calificacion
(
    id_calificacion integer NOT NULL DEFAULT nextval('calificacion_id_calificacion_seq'::regclass),
    opinion character varying(255) COLLATE pg_catalog."default",
    valor_calificacion integer NOT NULL,
    CONSTRAINT calificacion_pkey PRIMARY KEY (id_calificacion)
);

CREATE TABLE IF NOT EXISTS public.carrito
(
    id_carrito integer NOT NULL DEFAULT nextval('carrito_id_carrito_seq'::regclass),
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    fecha timestamp(6) without time zone NOT NULL,
    id_calificacion integer,
    id_estado_pago integer,
    id_producto_venta integer,
    CONSTRAINT carrito_pkey PRIMARY KEY (id_carrito)
);

CREATE TABLE IF NOT EXISTS public.categoria
(
    id_categoria integer NOT NULL DEFAULT nextval('categoria_id_categoria_seq'::regclass),
    nombre_categoria character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT categoria_pkey PRIMARY KEY (id_categoria)
);

CREATE TABLE IF NOT EXISTS public.ciudad
(
    id_ciudad integer NOT NULL DEFAULT nextval('ciudad_id_ciudad_seq'::regclass),
    nombre_ciudad character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_departamento integer,
    CONSTRAINT ciudad_pkey PRIMARY KEY (id_ciudad)
);

CREATE TABLE IF NOT EXISTS public.color
(
    id_color integer NOT NULL DEFAULT nextval('color_id_color_seq'::regclass),
    nombre_color character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT color_pkey PRIMARY KEY (id_color)
);

CREATE TABLE IF NOT EXISTS public.departamento
(
    id_departamento integer NOT NULL DEFAULT nextval('departamento_id_departamento_seq'::regclass),
    nombre_departamento character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_ciudad integer,
    CONSTRAINT departamento_pkey PRIMARY KEY (id_departamento)
);

CREATE TABLE IF NOT EXISTS public.estado_pago
(
    id_estado_pago integer NOT NULL DEFAULT nextval('estado_pago_id_estado_pago_seq'::regclass),
    estado character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT estado_pago_pkey PRIMARY KEY (id_estado_pago)
);

CREATE TABLE IF NOT EXISTS public.genero
(
    id_genero integer NOT NULL DEFAULT nextval('genero_id_genero_seq'::regclass),
    nombre_genero character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT genero_pkey PRIMARY KEY (id_genero)
);

CREATE TABLE IF NOT EXISTS public.inventario
(
    id_inventario integer NOT NULL DEFAULT nextval('inventario_id_inventario_seq'::regclass),
    cantidad integer NOT NULL,
    id_producto_detalle integer,
    CONSTRAINT inventario_pkey PRIMARY KEY (id_inventario)
);

CREATE TABLE IF NOT EXISTS public.login
(
    id_carrito integer NOT NULL DEFAULT nextval('login_id_carrito_seq'::regclass),
    contrasenia character varying(255) COLLATE pg_catalog."default" NOT NULL,
    usuario character varying(255) COLLATE pg_catalog."default" NOT NULL,
    id_usuario integer,
    CONSTRAINT login_pkey PRIMARY KEY (id_carrito)
);

CREATE TABLE IF NOT EXISTS public.marca
(
    id_marca integer NOT NULL DEFAULT nextval('marca_id_marca_seq'::regclass),
    nombre_marca character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT marca_pkey PRIMARY KEY (id_marca)
);

CREATE TABLE IF NOT EXISTS public.producto
(
    id_producto integer NOT NULL DEFAULT nextval('producto_id_producto_seq'::regclass),
    nombre_producto character varying(255) COLLATE pg_catalog."default" NOT NULL,
    precio double precision NOT NULL,
    CONSTRAINT producto_pkey PRIMARY KEY (id_producto)
);

CREATE TABLE IF NOT EXISTS public.producto_detalle
(
    id_producto_detalle integer NOT NULL DEFAULT nextval('producto_detalle_id_producto_detalle_seq'::regclass),
    id_categoria integer,
    id_color integer,
    id_genero integer,
    id_marca integer,
    id_talla integer,
    id_producto integer,
    CONSTRAINT producto_detalle_pkey PRIMARY KEY (id_producto_detalle)
);

CREATE TABLE IF NOT EXISTS public.producto_venta
(
    id_producto_venta integer NOT NULL DEFAULT nextval('producto_venta_id_producto_venta_seq'::regclass),
    cantidad integer NOT NULL,
    id_producto_detalle integer,
    CONSTRAINT producto_venta_pkey PRIMARY KEY (id_producto_venta)
);

CREATE TABLE IF NOT EXISTS public.talla
(
    id_talla integer NOT NULL,
    nombre_talla character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT talla_pkey PRIMARY KEY (id_talla)
);

CREATE TABLE IF NOT EXISTS public.tipo_documento
(
    id_tipo_documento integer NOT NULL DEFAULT nextval('tipo_documento_id_tipo_documento_seq'::regclass),
    descripcion character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tipo_documento_pkey PRIMARY KEY (id_tipo_documento)
);

CREATE TABLE IF NOT EXISTS public.usuario
(
    id_usuario integer NOT NULL DEFAULT nextval('usuario_id_usuario_seq'::regclass),
    apellidos character varying(255) COLLATE pg_catalog."default" NOT NULL,
    direccion character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    nombres character varying(255) COLLATE pg_catalog."default" NOT NULL,
    numero_documento character varying(255) COLLATE pg_catalog."default" NOT NULL,
    termino_condiciones boolean NOT NULL,
    id_departamento integer,
    id_tipo_documento integer,
    CONSTRAINT usuario_pkey PRIMARY KEY (id_usuario)
);

ALTER TABLE IF EXISTS public.carrito
    ADD CONSTRAINT fk325917td5inl0q0589brj2e9k FOREIGN KEY (id_producto_venta)
    REFERENCES public.producto_venta (id_producto_venta) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.carrito
    ADD CONSTRAINT fk39yqgx07dcudgpfmmv3smnd0r FOREIGN KEY (id_calificacion)
    REFERENCES public.calificacion (id_calificacion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.carrito
    ADD CONSTRAINT fke72j04mud2nr12lisklsyaicv FOREIGN KEY (id_estado_pago)
    REFERENCES public.estado_pago (id_estado_pago) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.carrito
    ADD CONSTRAINT fklrjf0eohggcras6p5sianxyky FOREIGN KEY (id_carrito)
    REFERENCES public.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS carrito_pkey
    ON public.carrito(id_carrito);


ALTER TABLE IF EXISTS public.ciudad
    ADD CONSTRAINT fk54syqxbls2lsug1i7508pny1c FOREIGN KEY (id_departamento)
    REFERENCES public.departamento (id_departamento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.departamento
    ADD CONSTRAINT fkk52gqb8eoiu8wt430gq6d3uha FOREIGN KEY (id_ciudad)
    REFERENCES public.departamento (id_departamento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.inventario
    ADD CONSTRAINT fk53t2lweovmdi258dkntwwrohm FOREIGN KEY (id_producto_detalle)
    REFERENCES public.producto_detalle (id_producto_detalle) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.inventario
    ADD CONSTRAINT fkeqgw53h1dabxmiqxpe62i9mih FOREIGN KEY (id_inventario)
    REFERENCES public.producto_detalle (id_producto_detalle) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS inventario_pkey
    ON public.inventario(id_inventario);


ALTER TABLE IF EXISTS public.login
    ADD CONSTRAINT fkmniuye73mbjnghe89vno8ks72 FOREIGN KEY (id_usuario)
    REFERENCES public.usuario (id_usuario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.producto_detalle
    ADD CONSTRAINT fkas1qn4tq02nei1fxfcayj2c5l FOREIGN KEY (id_talla)
    REFERENCES public.talla (id_talla) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.producto_detalle
    ADD CONSTRAINT fkdn225xnmsw5kpx3q2r9kaf1b FOREIGN KEY (id_producto_detalle)
    REFERENCES public.producto (id_producto) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS producto_detalle_pkey
    ON public.producto_detalle(id_producto_detalle);


ALTER TABLE IF EXISTS public.producto_detalle
    ADD CONSTRAINT fkdvxp4d34tufty8j74ygnk329a FOREIGN KEY (id_color)
    REFERENCES public.color (id_color) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.producto_detalle
    ADD CONSTRAINT fkg6j127ikt116qo8mpx1lj1qyo FOREIGN KEY (id_producto)
    REFERENCES public.producto (id_producto) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.producto_detalle
    ADD CONSTRAINT fki4oqissw9tnjie411rvragcen FOREIGN KEY (id_marca)
    REFERENCES public.marca (id_marca) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.producto_detalle
    ADD CONSTRAINT fkmfrc9a6uji5cxfmmor87uwg30 FOREIGN KEY (id_categoria)
    REFERENCES public.categoria (id_categoria) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.producto_detalle
    ADD CONSTRAINT fksst3lgiicp0bwjb9rh1slo6bf FOREIGN KEY (id_genero)
    REFERENCES public.genero (id_genero) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.producto_venta
    ADD CONSTRAINT fkrm9826ph3se20grvih1e32tml FOREIGN KEY (id_producto_detalle)
    REFERENCES public.producto_detalle (id_producto_detalle) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.usuario
    ADD CONSTRAINT fkfjrcatmd50ywwe1o2bn99whr8 FOREIGN KEY (id_departamento)
    REFERENCES public.departamento (id_departamento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.usuario
    ADD CONSTRAINT fki84twx6f7o0pu9mbi856hhp7s FOREIGN KEY (id_tipo_documento)
    REFERENCES public.tipo_documento (id_tipo_documento) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;